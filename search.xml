<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Use hexo + github to build a blog</title>
      <link href="/posts/c969bad9/"/>
      <url>/posts/c969bad9/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Getting-Started"><a href="#1-Getting-Started" class="headerlink" title="1 Getting Started"></a>1 Getting Started</h1><p>首先跟着hexo官方文档走一遍：<a href="https://hexo.io/docs/" target="_blank" rel="noopener">https://hexo.io/docs/</a></p><ol><li><p>安装git：<a href="https://hexo.io/docs/#Install-Git" target="_blank" rel="noopener">https://hexo.io/docs/#Install-Git</a></p></li><li><p>安装Node.js：<a href="https://hexo.io/docs/#Install-Node-js" target="_blank" rel="noopener">https://hexo.io/docs/#Install-Node-js</a></p></li><li><p>安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Win下 找个目录右键 Git Bash Here</span></span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>初始化blog</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建blog目录</span></span><br><span class="line">mkdir blog</span><br><span class="line"><span class="comment"># 进入blog目录</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>初始化好后，目录下有这么些东西</p><p><code>_config.yml</code>：blog的配置文件，yaml语言</p><p><code>package.json</code>：存储的是一些blog安装信息，比如一些dependencies</p><p><code>scaffolds</code>：存储新建页面的模板</p><p><code>source</code>：blog的主要文件，hexo会渲染这里面的文件，隐藏文件，文件或文件夹名以<code>_</code>开头不会进行渲染，<code>_post</code>文件夹除外</p><p><code>themes</code>：主题文件夹，最需折腾的一个地方</p><p>其实到这里再运行一下<code>hexo g &amp;&amp; hexo s</code>就可以在本地欣赏你的blog了，默认地址是：<a href="https://localhost:4000，但是问题是，样式有点丑，折腾theme吧" target="_blank" rel="noopener">https://localhost:4000，但是问题是，样式有点丑，折腾theme吧</a></p></li><li><p>修改theme</p><p>这里我采用的是既然大家都在用，那我也来用用的NexT主题，是的我们要换一个官方文档了：<a href="https://theme-next.org/docs/" target="_blank" rel="noopener">https://theme-next.org/docs/</a></p><p>安装theme：<a href="https://theme-next.org/docs/getting-started/installation" target="_blank" rel="noopener">https://theme-next.org/docs/getting-started/installation</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可能忘了说了 git安装好了 你要配置一下哈</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>好了，准备工作做好了，开始配置吧</p></li></ol><a id="more"></a><h1 id="2-Configuration"><a href="#2-Configuration" class="headerlink" title="2 Configuration"></a>2 Configuration</h1><h2 id="2-1-hexo"><a href="#2-1-hexo" class="headerlink" title="2.1 hexo"></a>2.1 hexo</h2><p>打开hexo的配置文件我们来欣赏一下配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 确定当前在blog目录下哈 很少需要切换目录的</span></span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>欣赏优雅的配置文件，还好这文件不算太长，我就一句一句加注释吧，参考官网：<a href="https://hexo.io/docs/configuration" target="_blank" rel="noopener">https://hexo.io/docs/configuration</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Sidney</span> <span class="string">God</span>  <span class="comment"># 网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">Keep</span> <span class="string">quiet</span> <span class="string">time</span> <span class="string">for</span> <span class="string">time</span>  <span class="comment"># 网站副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">You</span> <span class="string">laugh</span> <span class="string">at</span> <span class="string">me</span> <span class="string">for</span> <span class="string">being</span> <span class="string">different,</span> <span class="string">but</span> <span class="string">I</span> <span class="string">laugh</span> <span class="string">at</span> <span class="string">you</span> <span class="string">for</span> <span class="string">being</span> <span class="string">the</span> <span class="string">same.</span>  <span class="comment"># 网站描述</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">Sidney,</span> <span class="string">Ding,</span> <span class="string">Sidney</span> <span class="string">Ding</span>  <span class="comment"># 关键词</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Sidney</span> <span class="string">Ding</span>  <span class="comment"># 您的名字</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span>  <span class="comment"># 网站使用的语言 中文是zh-Hans</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span>  <span class="comment"># 设置时区</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://sidneygod.coding.me</span>  <span class="comment"># 网址 可以不写</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span>  <span class="comment"># 网站根目录</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span>  <span class="comment"># 文章的永久链接格式 先用默认值 我的做了修改 后来说</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory 下面是默认目录 不要动 没意义</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span>  <span class="comment"># 跳过渲染的文件 可以不要</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">auto_spacing:</span> <span class="literal">false</span>  <span class="comment"># 中文和英文之间加空格</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span>  <span class="comment"># 启动asset文件夹 如果文章图片多的话 建议开启</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span>  <span class="comment"># 代码块高亮</span></span><br><span class="line"><span class="attr">  line_number:</span> <span class="literal">true</span>  <span class="comment"># 显示行号</span></span><br><span class="line"><span class="attr">  auto_detect:</span> <span class="literal">false</span>  <span class="comment"># 自动检测语言</span></span><br><span class="line"><span class="attr">  tab_replace:</span> <span class="literal">true</span>  <span class="comment"># tab自动转空格</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">  order_by:</span> <span class="bullet">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="attr">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span>  <span class="comment"># 当前主题名称 当然是要换成刚下载的了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span></span><br><span class="line">    <span class="comment"># 这个部署就按照这个样式 GitHub的仓库 &lt;用户名&gt;.github.io</span></span><br><span class="line"><span class="attr">    github:</span> <span class="string">git@github.com:SidneyGod/SidneyGod.github.io.git</span></span><br><span class="line">    <span class="comment"># 码云的仓库 &lt;用户名&gt; 码云比较坑 需要手动更新</span></span><br><span class="line"><span class="attr">    gitee:</span> <span class="string">git@gitee.com:SidneyGod/SidneyGod.git</span></span><br><span class="line">    <span class="comment"># coding的仓库 &lt;用户名&gt;</span></span><br><span class="line"><span class="attr">    coding:</span> <span class="string">git@git.dev.tencent.com:SidneyGod/SidneyGod.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions 下面是一些插件 每个插件我都给了地址 具体怎么安装 可打开那些地址</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">### Feed Atom https://github.com/hexojs/hexo-generator-feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">  order_by:</span> <span class="bullet">-date</span></span><br><span class="line"><span class="attr">  icon:</span> <span class="string">icon.png</span></span><br><span class="line"><span class="attr">  autodiscovery:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### Local Search https://github.com/wzpan/hexo-generator-search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">999</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  time:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_symbols:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  total_time:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  exclude_codeblock:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### https://github.com/Rozbo/hexo-abbrlink</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line"><span class="attr">  alg:</span> <span class="string">crc32</span>  <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line"><span class="attr">  rep:</span> <span class="string">hex</span>    <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>好了，hexo的配置文件完了，再举个例子，怎么安装依赖吧，就举那个abbrlink吧</p><p>先打开上面那个地址：<a href="https://github.com/Rozbo/hexo-abbrlink" target="_blank" rel="noopener">https://github.com/Rozbo/hexo-abbrlink</a></p><p>然后跟着他的步骤走一遍</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm install hexo-abbrlink --save</span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>一个是<code>permalink: posts/:abbrlink/</code>，如果你把它修改成<code>permalink: p/:abbrlink/</code>和简书的地址长得就很像了:joy:</p><p>另一个就是在下面添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line"><span class="attr">  alg:</span> <span class="string">crc32</span>  <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line"><span class="attr">  rep:</span> <span class="string">hex</span>    <span class="comment">#support dec(default) and hex</span></span><br></pre></td></tr></table></figure><p>嗯，安装好了，下一个…很简单，对不对，那么问题来了，如果安装了一个插件，然后觉得不好了，咋卸了它呢？直接执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-abbrlink</span><br><span class="line"><span class="comment"># 然后把你修改过的地方 改回来</span></span><br></pre></td></tr></table></figure><p>要是忘了这个插件名，怎么办？丢个图，自己体会</p><p><img alt="1570156735242" data-src="./Use-hexo-github-to-build-a-blog/1570156735242.png"></p><p>好了hexo的配置告一段落</p><h2 id="2-2-NexT"><a href="#2-2-NexT" class="headerlink" title="2.2 NexT"></a>2.2 NexT</h2><p>接下来看next的配置文件，我们还接着一行一行注释吧，不！我拒绝，1000来行呢，我愿意，这看着也不舒服。丢个网址自己看：<a href="https://theme-next.org/docs/theme-settings/" target="_blank" rel="noopener">https://theme-next.org/docs/theme-settings/</a></p><p>说说插件吧，其实套路都一样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-symbols-count-time</span></span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">true</span></span><br><span class="line">  item_text_post: <span class="literal">true</span></span><br><span class="line">  item_text_total: <span class="literal">true</span></span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure><p>看到没，上面又有地址，这摆明了让你打开它，不打开它都不对不起它对你招了又招的小手：<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">https://github.com/theme-next/hexo-symbols-count-time</a></p><p>然后你看到了吧，又是安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><p>然后改配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  item_text_post:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  item_text_total:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  awl:</span> <span class="number">4</span>  <span class="comment"># 中文建议改成 2</span></span><br><span class="line"><span class="attr">  wpm:</span> <span class="number">275</span>  <span class="comment"># 中文建议改成 300</span></span><br><span class="line"><span class="attr">  suffix:</span> <span class="string">mins.</span></span><br></pre></td></tr></table></figure><p>要勇于尝试，还有看到别人家有的特效，都可以找找，不过特效越多，加载可能就会慢一点，毕竟文件多了嘛</p><h1 id="3-Beautify"><a href="#3-Beautify" class="headerlink" title="3 Beautify"></a>3 Beautify</h1><p>有了物质基础，当然要享受了，关于美化NexT的文章多得不得了，但是大多针对的是之前的NexT，有的美化可能需要修改<code>*.styl</code>文件什么的，其实没必要，新版本的NexT已经集成了那些特性，修改配置文件就有了</p><p>我比较懒，推荐几篇文档：</p><p><a href="http://shenzekun.cn/hexo的next主题个性化配置教程.html" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></p><p><a href="https://leflacon.github.io/59f6b91c/" target="_blank" rel="noopener">如何给个人博客换上专属免费域名</a></p><p>还有自己搜索去吧…</p><p>对前端有了解的话，肯定知道，静态页面咋改都行，浏览器慢慢调试就是咯，NexT之前是有预留<code>_custom.styl</code>给用户自己修改css样式的，现在需要加点东西</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim themes/next/<span class="built_in">source</span>/css/main.styl</span><br></pre></td></tr></table></figure><p>首先说明，我并不懂这语法，也不想学，但是按照模样修改还是可以的</p><p><img alt="1570158669352" data-src="./Use-hexo-github-to-build-a-blog/1570158669352.png"></p><p>就加了那句红框，然后在这个目录下创建<code>_custom</code>目录，再创建<code>custom.styl</code>文件，下面给出我的自定义css样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">// 文章内链接文本样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-id">#fc6423</span>;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fc6423</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 文章背景半透明</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">  border-radius: 20px; //文章背景设置圆角</span><br><span class="line">  <span class="selector-tag">padding</span>: 10<span class="selector-tag">px</span> 50<span class="selector-tag">px</span> 20<span class="selector-tag">px</span> 50<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">background</span><span class="selector-pseudo">:rgba(255</span>, 255, 255, 0<span class="selector-class">.8</span>) <span class="selector-tag">none</span> <span class="selector-tag">repeat</span> <span class="selector-tag">scroll</span> !<span class="selector-tag">important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-block</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255, 255, 255, 0) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255, 255, 255, 0) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(0, 0, 0, 0), <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(0, 0, 0, 0), <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.page</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(255, 255, 255, 0) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(0, 0, 0, 0), <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(0, 0, 0, 0), <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="built_in">rgba</span>(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 去除页面底部页码上面的横线</span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 去掉图片边框</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-gallery</span> <span class="selector-class">.post-gallery-img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 去除在页面文章之间的分割线</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-eof</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(255, 255, 255, 0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 选中文字部分的样式</span><br><span class="line"><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#222222</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fced6d</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 鼠标样式</span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">"/./cursor/pointer.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">"/./cursor/click.ico"</span>),auto<span class="meta">!important</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// fonts</span><br><span class="line">@<span class="keyword">font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'DFGirlFull'</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'/fonts/DFGirlFull.ttf'</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'ModernAntiqua'</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'/fonts/ModernAntiqua.ttf'</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Monaco'</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'/fonts/Monaco.ttf'</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个文件中的鼠标样式和字体需要自己提供，置于位置，记住<code>blog/themes/next/source</code>就是根目录，然后放哪，你开心就好，这其实就是主题的核心样式位置，还有个布局格式在<code>blog/themes/next/layout</code>，难度不大</p><h1 id="4-Deploy"><a href="#4-Deploy" class="headerlink" title="4 Deploy"></a>4 Deploy</h1><h2 id="4-1-写篇文章"><a href="#4-1-写篇文章" class="headerlink" title="4.1 写篇文章"></a>4.1 写篇文章</h2><p>一切都做好了，终于可以开始愉快的写blog了，新建一篇blog</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"Article Name"</span></span><br></pre></td></tr></table></figure><p>然后就会在<code>blog/source/_posts</code>新建一个<code>Article Name.md</code>文件，打开这个文件你就可以写blog了。问题来了，这以后blog文章一旦多了，找md文件多费事，能不能在new完自动打开这个文件？当然能！hexo作者这点还是想到了的</p><p>首先在<code>hexo</code>目录的<code>scripts</code>目录中创建一个JavaScript文件，文件名随意，如果没有<code>scripts</code>那就创建一个，然后在js文件中添加这么段代码</p><p>Win：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> spawn = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hexo 3 用户复制这段</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="comment">// 这是我打开markdown文件软件的路径</span></span><br><span class="line">  spawn(<span class="string">'start  "D:\Program Files\Typora\Typora.exe" '</span> + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Mac：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hexo 3 用户复制这段</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    exec(<span class="string">'open -a "markdown编辑器绝对路径.app" '</span> + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="4-2-发布"><a href="#4-2-发布" class="headerlink" title="4.2 发布"></a>4.2 发布</h2><p>写好了，那就发布吧</p><h3 id="4-2-1-安装插件"><a href="#4-2-1-安装插件" class="headerlink" title="4.2.1 安装插件"></a>4.2.1 安装插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"><span class="comment"># 修改hexo配置文件</span></span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>上面说过的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span></span><br><span class="line">    <span class="comment"># 这个部署就按照这个样式 GitHub的仓库 &lt;用户名&gt;.github.io</span></span><br><span class="line"><span class="attr">    github:</span> <span class="string">git@github.com:SidneyGod/SidneyGod.github.io.git</span></span><br><span class="line">    <span class="comment"># 码云的仓库 &lt;用户名&gt; 码云比较坑 需要手动更新</span></span><br><span class="line"><span class="attr">    gitee:</span> <span class="string">git@gitee.com:SidneyGod/SidneyGod.git</span></span><br><span class="line">    <span class="comment"># coding的仓库 &lt;用户名&gt;</span></span><br><span class="line"><span class="attr">    coding:</span> <span class="string">git@git.dev.tencent.com:SidneyGod/SidneyGod.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="4-2-2-创建仓库"><a href="#4-2-2-创建仓库" class="headerlink" title="4.2.2 创建仓库"></a>4.2.2 创建仓库</h3><p><strong>github</strong></p><p>创建好<code>&lt;用户名&gt;.github.io</code>仓库，git地址也是对的，就可以直接部署了，每次更新，github也会自动更新</p><p>毕竟github不在国内，可能访问速度有点慢</p><p><strong>码云</strong></p><p>创建好同名仓库，然后需要以下操作</p><ol><li><p>进入仓库 &gt; Service &gt; Gitee Pages</p><p><img alt="1570160301420" data-src="./Use-hexo-github-to-build-a-blog/1570160301420.png"></p></li><li><p>点击Update</p><p><img alt="1570160387541" data-src="./Use-hexo-github-to-build-a-blog/1570160387541.png"></p></li></ol><p><strong>这不是只要做一次，而是你每次更新页面都需要手动去更新!!!</strong></p><p><strong>coding</strong></p><p>创建好同名仓库，只需要做一次，之后会自动同步</p><ol><li><p>进入仓库 &gt; 代码 &gt; Pages 服务</p><p><img alt="1570160610224" data-src="./Use-hexo-github-to-build-a-blog/1570160610224.png"></p></li><li><p>一键开启</p><p><img alt="1570160683781" data-src="./Use-hexo-github-to-build-a-blog/1570160683781.png"></p></li></ol><p>已经被腾讯买了</p><h3 id="4-2-3-hexo命令"><a href="#4-2-3-hexo命令" class="headerlink" title="4.2.3 hexo命令"></a>4.2.3 hexo命令</h3><p>这个时候就可以通过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清空public目录 没必要每次都做 除非安装了新插件什么的</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 生成文件</span></span><br><span class="line">hexo g <span class="comment"># hexo generate</span></span><br><span class="line"><span class="comment"># 部署到git仓库</span></span><br><span class="line">hexo d <span class="comment"># hexo deploy</span></span><br></pre></td></tr></table></figure><p>这时候就可以通过</p><p><a href="https://sidneygod.github.io/" target="_blank" rel="noopener">https://sidneygod.github.io/</a></p><p><a href="https://sidneygod.coding.me/">https://sidneygod.coding.me/</a></p><p><a href="https://sidneygod.gitee.io/" target="_blank" rel="noopener">https://sidneygod.gitee.io/</a></p><p>访问blog了</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Learning</title>
      <link href="/posts/3ab58e11/"/>
      <url>/posts/3ab58e11/</url>
      
        <content type="html"><![CDATA[<h1 id="0-初始化"><a href="#0-初始化" class="headerlink" title="0 初始化"></a>0 初始化</h1><p>每台计算机只需配置一次，升级时会保留配置信息。</p><p>Git自带一个 git config 的工具帮助设置控制Git外观和行为的配置变量，这些变量存在于三个不同的位置：</p><ul><li>/etc/gitconfig：包含系统上每一个用户的及他们仓库的通用配置。如果带有<code>--system</code>选项的git config时，会从此文件读写变量</li><li>~/.gitconfig或~/.config/git/config：只针对当前用户。使用<code>--global</code>选项读写此文件</li><li>当前仓库目录中的config(.git/config)：针对该仓库</li></ul><a id="more"></a><p>每一级别覆盖上一级别</p><p><strong>基本配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 配置用户名和邮箱</span><br><span class="line">git config --global user.name "Sidney Ding"</span><br><span class="line">git config --global user.email "dingfs0527@thundersoft.com"</span><br><span class="line"><span class="meta">#</span> 文本编辑器 根据喜好</span><br><span class="line">git config --glonal core.editor vim</span><br><span class="line"><span class="meta">#</span> 检查配置信息</span><br><span class="line">git config --list</span><br><span class="line">git config user.name</span><br><span class="line"><span class="meta">#</span> 获取帮助</span><br><span class="line">git help &lt;verb&gt;</span><br><span class="line">git &lt;verb&gt; --help</span><br><span class="line">man git-&lt;verb&gt;</span><br></pre></td></tr></table></figure><h1 id="1-基础"><a href="#1-基础" class="headerlink" title="1 基础"></a>1 基础</h1><p>Git使用基本流程</p><p><img alt="git1" data-src="./Git-Learning/git1.png"></p><h2 id="1-1-获取git仓库"><a href="#1-1-获取git仓库" class="headerlink" title="1.1 获取git仓库"></a>1.1 获取git仓库</h2><p>获取仓库的方法有两种</p><h3 id="1-1-1-现有目录初始化"><a href="#1-1-1-现有目录初始化" class="headerlink" title="1.1.1 现有目录初始化"></a>1.1.1 现有目录初始化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 进入项目目录</span><br><span class="line">cd &lt;ProjectDir&gt;</span><br><span class="line"><span class="meta">#</span> 初始化 会创建一个.git子目录</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="1-1-2-克隆现有仓库"><a href="#1-1-2-克隆现有仓库" class="headerlink" title="1.1.2 克隆现有仓库"></a>1.1.2 克隆现有仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> RepoUrl根据协议不同 地址类型也不近相同</span><br><span class="line">git clone &lt;RepoUrl&gt;</span><br><span class="line"><span class="meta">#</span> 会在当前目录下创建testRepo目录 并初始化出一个.git文件夹</span><br><span class="line">git clone https://github.com/userName/testRepo</span><br><span class="line"><span class="meta">#</span> 创建的目录变为MyRepo</span><br><span class="line">git clone https://github.com/userName/testRepo MyRepo</span><br></pre></td></tr></table></figure><h2 id="1-2-忽略文件"><a href="#1-2-忽略文件" class="headerlink" title="1.2 忽略文件"></a>1.2 忽略文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cat .gitignore</span><br><span class="line">*.[oa]</span><br><span class="line">*~</span><br></pre></td></tr></table></figure><ul><li>所有空行或以<code>#</code>开头的行都会被git忽略</li><li>可以使用标准的glob模式匹配</li><li>匹配模式可以以<code>/</code>开头防止递归</li><li>匹配模式可以以<code>/</code>结尾指定目录</li><li>要忽略指定模式以外的文件或目录，可以在模式前加<code>!</code>取反</li></ul><p>glob模式：shell中简化的正则</p><ul><li><code>*</code>：匹配零个或任意多个字符</li><li><code>[abc]</code>：匹配a,b,c之间任意一个字符</li><li><code>?</code>：匹配任意一个字符</li><li>[0-9]：表示匹配0-9之间人一个数字</li><li><code>a/**/z</code>：匹配任意中间目录，例：a/b/z,/a/b/c/z…</li><li>more: <a href="https://github.com/github/gitignore" target="_blank" rel="noopener">https://github.com/github/gitignore</a></li></ul><h2 id="1-3-本地文件管理"><a href="#1-3-本地文件管理" class="headerlink" title="1.3 本地文件管理"></a>1.3 本地文件管理</h2><p><img alt="git2" data-src="./Git-Learning/git2.png"></p><ul><li>工作区：未隐藏的部分</li><li>版本库：<code>.git</code>目录<ul><li>Index：<code>.git/index</code>，暂存区</li><li>HEAD：<code>.git/HEAD</code>，是一个指针，指向当前分支的版本</li><li>master：只是一个存放40位sha-1的文件而已</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 用暂存区的文件替换工作区的文件 撤销修改</span><br><span class="line">git checkout -- &lt;file&gt;</span><br><span class="line">git checkout .</span><br><span class="line"><span class="meta">#</span> 将文件加到暂存区</span><br><span class="line">git add &lt;file&gt;</span><br><span class="line"><span class="meta">#</span> 可以查看文件的状态</span><br><span class="line">git status</span><br><span class="line"><span class="meta">#</span> 查看文件的详细状态</span><br><span class="line">git diff</span><br><span class="line">git diff --staged</span><br><span class="line"><span class="meta">#</span> 撤销暂存区的修改</span><br><span class="line">git reset HEAD &lt;file&gt;</span><br><span class="line"><span class="meta">#</span> 删除暂存区的文件 工作区的文件不做修改</span><br><span class="line">git rm --cached &lt;file&gt;</span><br><span class="line"><span class="meta">#</span> 改名字 等价于三条命令 mv README.md README | git rm README.md | git add README</span><br><span class="line">git mv README.md README</span><br><span class="line"><span class="meta">#</span> 将暂存区的目录树写到版本库中HEAD指向的分支</span><br><span class="line">git commit</span><br><span class="line"><span class="meta">#</span> 修改commit信息</span><br><span class="line">git commit --amend</span><br><span class="line"><span class="meta">#</span> 撤销上一次提交 其实并不是撤销 其实保留了上一次提交 只是copy了上上次提交的状态</span><br><span class="line">git revert -m 1 HEAD</span><br><span class="line">git revert -m commitId</span><br><span class="line"><span class="meta">#</span> 查看提交历史 由近及远</span><br><span class="line">git log</span><br><span class="line">git log -p</span><br><span class="line">git log -3</span><br><span class="line">git log --pretty=oneline</span><br><span class="line"><span class="meta">#</span> 回退到前一个版本 1可以改为任意版本内的数字</span><br><span class="line">git reset --hard HEAD~1</span><br><span class="line"><span class="meta">#</span> 回到任意的提交版本 commitId不必写全 HEAD确实是一个指针</span><br><span class="line">git reset --hard &lt;commitId&gt;</span><br><span class="line"><span class="meta">#</span> 命令历史</span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><p>后悔药使用指南:</p><p>git checkout .  还没有add</p><p>git reset</p><h2 id="1-4-远程仓库"><a href="#1-4-远程仓库" class="headerlink" title="1.4 远程仓库"></a>1.4 远程仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 显示所有的读写远程仓库</span><br><span class="line">git remote -v</span><br><span class="line"><span class="meta">#</span> 添加一个远程仓库</span><br><span class="line">git remote add &lt;shortname&gt; &lt;url&gt;</span><br><span class="line"><span class="meta">#</span> 从远程仓库获取数据</span><br><span class="line">git fetch [remoteName]</span><br><span class="line"><span class="meta">#</span> 抓取数据并尝试自动合并</span><br><span class="line">git pull</span><br><span class="line"><span class="meta">#</span> 推送到远程仓库</span><br><span class="line">git push [remoteName] [branchName]</span><br><span class="line">git push origin master</span><br><span class="line">git push origin HEAD:refs/for/&lt;branchName&gt;</span><br><span class="line"><span class="meta">#</span> 查看远程仓库信息</span><br><span class="line">git remote show [remoteName]</span><br><span class="line"><span class="meta">#</span> 重命名远程仓库</span><br><span class="line">git remote rename &lt;oldRemoteName&gt; &lt;newRemoteName&gt;</span><br><span class="line">git remote rm &lt;remoteName&gt;</span><br></pre></td></tr></table></figure><h2 id="1-5-打标签"><a href="#1-5-打标签" class="headerlink" title="1.5 打标签"></a>1.5 打标签</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 列出所有的标签</span><br><span class="line">git tag</span><br><span class="line">git tag -l 'v1.8*'</span><br><span class="line"><span class="meta">#</span> 打附注标签</span><br><span class="line">git tag -a v1.9 -m 'Version 1.9'</span><br><span class="line"><span class="meta">#</span> 打轻量标签</span><br><span class="line">git tag v1.9-lw</span><br><span class="line"><span class="meta">#</span> 后期打标签</span><br><span class="line">git tag -a v1.7 &lt;commitId&gt;</span><br><span class="line"><span class="meta">#</span> 默认标签不会传送到远程仓库</span><br><span class="line">git push origin [tagname]</span><br><span class="line">git push origin --tags  # 一次性传很多标签</span><br><span class="line"><span class="meta">#</span> 删除tag</span><br><span class="line">git tag -d &lt;tagName&gt;</span><br></pre></td></tr></table></figure><h2 id="1-5-别名"><a href="#1-5-别名" class="headerlink" title="1.5 别名"></a>1.5 别名</h2><p>可以给命令起别名 简化操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 之后可以用 git co 代替 git checkout</span><br><span class="line">git config --global alias.co checkout</span><br><span class="line">git config --global alias.br branch</span><br><span class="line">git config --global alias.ci commit</span><br><span class="line">git config --global alias.st status</span><br><span class="line"><span class="meta">#</span> 使用git last 查看上一次提交</span><br><span class="line">git config --global alias.last 'log -a HEAD'</span><br></pre></td></tr></table></figure><h2 id="1-7-other"><a href="#1-7-other" class="headerlink" title="1.7 other"></a>1.7 other</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 修改author</span><br><span class="line">git commit --amend --author="author name..."</span><br></pre></td></tr></table></figure><h1 id="2-分支"><a href="#2-分支" class="headerlink" title="2 分支"></a>2 分支</h1><p>简单来说就是时间线，每条时间线上有很多时间点(commit)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 创建分支 dev</span><br><span class="line">git branch dev</span><br><span class="line"><span class="meta">#</span> 切换到 dev 分支</span><br><span class="line">git checkout dev</span><br><span class="line"><span class="meta">#</span> 创建并切换到分支 dev</span><br><span class="line">git checkout -b dev</span><br><span class="line"><span class="meta">#</span> 查看当前分支</span><br><span class="line">git branch</span><br><span class="line"><span class="meta">#</span> 查看所有分支</span><br><span class="line">git branch -a</span><br><span class="line"><span class="meta">#</span> 合并制定分支到当前分支 fast-forward 代表只是向上游移动</span><br><span class="line">git merge dev</span><br><span class="line"><span class="meta">#</span> 删除分支</span><br><span class="line">git branch -d dev</span><br></pre></td></tr></table></figure><h2 id="2-1-冲突"><a href="#2-1-冲突" class="headerlink" title="2.1 冲突"></a>2.1 冲突</h2><p>当合并分支不再是 fast-forward 模式时，Git只是试图将各自修改的部分合并起来，但这种合并会有冲突</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git merge feature1</span><br><span class="line">Auto-merging testFile.txt</span><br><span class="line">CONFLICT (content): Merge conflict in testFile.txt</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></table></figure><p>Git提示我们需要手动解决冲突后再提交，通过<code>git status</code>也可以知道冲突的文件</p><p>在解决冲突时，可以使用<code>meld fileName</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line">Creating a new branch is quick &amp; simple.</span><br><span class="line">=======</span><br><span class="line">Creating a new branch is quick AND simple.</span><br><span class="line"><span class="meta">&gt;</span>&gt;&gt;&gt;&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt; 标记出不同分支的内容，需要手动去解决，比如手动修改后：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Creating a new branch is quick and simple.</span><br></pre></td></tr></table></figure><p>这样就可以再进行提交了</p><p>通过<code>git log --graph --pretty=oneline --abbrev-commit</code>可以查看分支合并情况</p><p>中断合并<code>git merge --abort</code></p><h2 id="2-2-bug分支"><a href="#2-2-bug分支" class="headerlink" title="2.2 bug分支"></a>2.2 bug分支</h2><p>背景：当前正在<code>dev</code>进行工作，且进行到一半，还没法提交，预计还需要1天完成，此时来了一个bug，这个bug必须在两小时内修复</p><p>Git提供了<code>stash</code>功能，可以把当前工作现场存储起来，等以后恢复后继续工作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git stash</span><br><span class="line">Saved working directory and index state WIP on dev: f52c633 and merge</span><br></pre></td></tr></table></figure><p>此时使用<code>git status</code>可以看到工作区是干净的，可以放心创建分支来修复bug。比如现在在master上创建分支修复bug</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git checkout -b issue-101</span><br><span class="line"><span class="meta">#</span> 进行一系列复杂操作 修复了bug 提交</span><br><span class="line">git commit -m "fix bug 101"</span><br><span class="line"><span class="meta">#</span> 切换回master分支</span><br><span class="line">git checkout master</span><br><span class="line"><span class="meta">#</span> 合并分支 --no-ff 表示禁用fast-forward模式</span><br><span class="line">git merge --no-ff -m "merge bug fix 101" issue-101</span><br><span class="line"><span class="meta">#</span> 删除bug分支</span><br><span class="line">git branch -d issue-101</span><br><span class="line"><span class="meta">#</span> 切回dev分支继续干活</span><br><span class="line">git checkout dev</span><br><span class="line"><span class="meta">#</span> 查看工作现场</span><br><span class="line">git stash list</span><br><span class="line"><span class="meta">#</span> 恢复工作现场同时删除工作现场</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><p>还可以使用<code>git stash apply stash@{0}</code>恢复，然后现场还在，需要通过<code>git stash drop stash@{0}</code>删除</p><blockquote><p>注意：git stash之前，一定要先用git status看一下，是否有Untrackted files。如果有，需要先add。因为git stash不能将untrakcted file压栈</p><p>没有commit切换分支是会报错的</p><p>工作区和暂存区是一个公开的平台，任何一个分支都会用到</p></blockquote><h2 id="2-3-Feature分支"><a href="#2-3-Feature分支" class="headerlink" title="2.3 Feature分支"></a>2.3 Feature分支</h2><p>开发时，每添加一个新功能最好新建一个feature分支，因为这个功能的代码可能是实验性质的，不能把主分支搞乱。</p><p>新建Feature分支，开发，合并，删除Feature分支</p><p>开发到一半，觉得这个不行，可以使用<code>git branch -D fearture</code>进行强行删除</p><h2 id="2-4-多人协作"><a href="#2-4-多人协作" class="headerlink" title="2.4 多人协作"></a>2.4 多人协作</h2><p>首先，试图使用<code>git push origin &lt;branchName&gt;</code>推送自己的修改</p><p>如果推送失败，则因为远程分支比你新，需要先用<code>git pull</code>试图合并</p><p>若果有冲突，则解决冲突，并在本地提交</p><p>没有冲突或者解决冲突后，再用<code>git push origin &lt;branchName&gt;</code>推送就能成功</p><blockquote><p>如果<code>git pull</code>提示<code>no tracking information</code>，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --setupstream-to=origin/branch-name branch-name</code>建立本地分支与远程分支的关联</p><p>本地新建分支如果不推送到远程，对其他人就是不可见的，于是可以随便玩..</p><p><code>git pull</code> = <code>git fetch</code> + <code>git merge</code></p></blockquote><h2 id="2-5-变基rebase"><a href="#2-5-变基rebase" class="headerlink" title="2.5 变基rebase"></a>2.5 变基rebase</h2><p>合并分支的一种方式</p><ul><li>rebase操作可以把本地未push的分叉提交历史整理成直线</li><li>目的是为了我们在查看历史提交的变化时更容易，因为分叉的提交需要三方对比</li><li>变基有风险！</li></ul><h1 id="3-Patch"><a href="#3-Patch" class="headerlink" title="3 Patch"></a>3 Patch</h1><ul><li>创建补丁</li></ul><p><code>git diff &gt; my.patch</code></p><p><code>git diff --no-prefix &gt; my.patch</code></p><p><code>git diff master &gt; my.patch</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 将最近的三次提交 变为patch文件 -s 表示加上当前用户签名</span><br><span class="line"><span class="meta">$</span> git format-patch -s HEAD~3..HEAD</span><br><span class="line">0001-Fix-typo-help-to-help.patch</span><br><span class="line">0002-Add-I18N-support.patch</span><br><span class="line">0003-Translate-for-Chinese.patch</span><br></pre></td></tr></table></figure><ul><li>通过邮件发送补丁</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git send-email *.patch</span><br></pre></td></tr></table></figure><p><code>git am</code>应用来自邮箱的补丁，特别是被mbox格式化过的</p><ul><li>应用补丁</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 基于HEAD~3创建一个分支</span><br><span class="line">git checkout -b branch1 HEAD~3</span><br><span class="line"><span class="meta">#</span> 应用补丁</span><br><span class="line">git apply *.patch</span><br><span class="line"><span class="meta">#</span> 如果apply一个patch出错，报error: patch failed: drivers/usb/host/xhci.c:918之类的错误，那么是因为本地已经有这个patch了，所以不能够apply</span><br></pre></td></tr></table></figure><ul><li>cherry-pick</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 引入特性分支的某个提交</span><br><span class="line">git cherry-pick commitId</span><br></pre></td></tr></table></figure><h1 id="4-Repo"><a href="#4-Repo" class="headerlink" title="4 Repo"></a>4 Repo</h1><p>repo就是通过Python对git的一个封装，用于管理多个Git版本库</p><h2 id="4-1-安装repo"><a href="#4-1-安装repo" class="headerlink" title="4.1 安装repo"></a>4.1 安装repo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 下载repo的引导脚本</span><br><span class="line">curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo</span><br><span class="line"><span class="meta">#</span> 将repo脚本设置为可执行</span><br><span class="line">chmod a+x ~/bin/repo</span><br></pre></td></tr></table></figure><h2 id="4-2-初始化"><a href="#4-2-初始化" class="headerlink" title="4.2 初始化"></a>4.2 初始化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir work-dir</span><br><span class="line">cd work-dir</span><br><span class="line"><span class="meta">#</span> 初始化清单文件 就是一个.git文件</span><br><span class="line">repo init -u &lt;gitUrl&gt;</span><br><span class="line">repo init -u &lt;gitUrl&gt; -b &lt;branchName&gt;</span><br><span class="line"><span class="meta">#</span> 表示优先从本地的mirror同步 提高下载速度</span><br><span class="line">repo init -u &lt;gitUrl&gt; -b &lt;branchName&gt; --reference=&lt;localServerMirror&gt;</span><br></pre></td></tr></table></figure><p>此时工作目录就会有个<code>.repo</code>文件夹，其中有个<code>manifest.xml</code>文件，这文件里面包含了Android各项目的信息</p><blockquote><p>代码库本地镜像 <code>repo init --mirror -u &lt;gitUrl&gt;</code></p></blockquote><h2 id="4-3-同步"><a href="#4-3-同步" class="headerlink" title="4.3 同步"></a>4.3 同步</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 同步代码到本地</span><br><span class="line">repo sync -j6</span><br><span class="line"><span class="meta">#</span> 其中</span><br><span class="line"><span class="meta">#</span> -j 多任务 过多会起反作用</span><br><span class="line"><span class="meta">#</span> -c 只下载当前代码</span><br><span class="line"><span class="meta">#</span> -d 让工程回退到manifest制定的版本</span><br><span class="line"><span class="meta">#</span> -f 如果某个工程同步失败 继续同步</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 也可以只同步感兴趣的代码</span><br><span class="line">repo sync platform/build</span><br></pre></td></tr></table></figure><h2 id="4-4-常用命令"><a href="#4-4-常用命令" class="headerlink" title="4.4 常用命令"></a>4.4 常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 获取帮助</span><br><span class="line">repo help &lt;command&gt;</span><br></pre></td></tr></table></figure><ul><li><p>repo init</p></li><li><p>repo sync</p><p>相当于<code>git clone</code>或<code>git update</code> + <code>git rebase origin/branch</code></p></li><li><p>repo start</p><p>对<code>git checkout -b</code>的封装</p><p><code>repo start &lt;newBranchName&gt; [--all | &lt;project&gt;...]</code></p></li><li><p>repo checkout</p><p>对<code>git checkout</code>的封装</p></li><li><p>repo status</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">project system/core/                            (*** NO BRANCH ***)</span><br><span class="line"> -m     fs_mgr/fs_mgr_fstab.cpp</span><br></pre></td></tr></table></figure></li></ul><p>每个小节的首行显示项目名称,以及所在分支名称</p><p>之后显示该项目中文件变更状态。头两个字母显示变更状态,后面显示文件名或者其<br>  他变更信息</p><p>第一个字母表示暂存区的文件修改状态</p><ul><li>- :没有改变<ul><li>A :添加 (不在HEAD中, 在暂存区)</li><li>M :修改 (在HEAD中, 在暂存区, 内容不同)</li><li>D :删除 (在HEAD中, 不在暂存区)</li><li>R :重命名 (不在HEAD中, 在暂存区, 路径修改 )</li><li>C :拷贝 (不在HEAD中, 在暂存区, 从其他文件拷贝)</li><li>T :文件状态改变 (在HEAD中, 在暂存区, 内容相同)</li><li>U :未合并, 需要冲突解决</li></ul></li></ul><p>第二个字母表示工作区文件的更改状态</p><ul><li>- :新/未知 (不在暂存区, 在工作区)<ul><li>m :修改 (在暂存区, 在工作区,被修改)</li><li>d :删除 (在暂存区,不在工作区)</li></ul></li></ul><p>两个表示状态的字母后面,显示文件名信息。如果有文件重命名还会显示改变前后的<br>  文件名以及文件的相似度</p><ul><li><p>repo diff [&lt;project&gt;…]</p><p>是对<code>git diff</code>命令的封装,用以分别显示各个项目工作区下的文件差异</p></li></ul><p><img alt="1562563963220" data-src="./Git-Learning/1562563963220.png"></p><h1 id="5-Gerrit"><a href="#5-Gerrit" class="headerlink" title="5 Gerrit"></a>5 Gerrit</h1><p>先加ssh-key</p><p>Gerrit下的Git服务器只允许用户向特殊的引用<code>ref/for/&lt;branchName&gt;</code>推送，这样才会创建一个reviewId</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> repo </tag>
            
            <tag> gerrit </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
